<?php
namespace Dizda\BankManager\CoreBundle\Entity\Repository;

use Doctrine\ORM\EntityRepository;

/**
 * TransactionRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class TransactionRepository extends EntityRepository
{

    /*public function getMonthTransactions($account, \DateTime $date)
    {

        $dateStart = clone $date->modify('first day of this month')->setTime(0,0,0);
        $dateEnd   = $date->modify('last day of this month')->setTime(23,59,59);


        $qb = $this->createQueryBuilder('s')
            ->field('account.$id')->equals($account)
            ->field('date_transaction')->gte($dateStart)
            ->field('date_transaction')->lte($dateEnd)
            ->sort('date_transaction', 'desc');

        return $qb->getQuery()->execute();

    }*/

    public function findByMonth($account, \DateTime $date)
    {
        $dateStart = clone $date->modify('first day of this month')->setTime(0,0,0);
        $dateEnd   = $date->modify('last day of this month')->setTime(23,59,59);

        $qb = $this->createQueryBuilder('a')
                   ->select('a')
                   ->where('a.account = :account')
                   ->andWhere('a.date_transaction >= :date_start')
                   ->andWhere('a.date_transaction <= :date_end')
                   ->orderBy('a.date_transaction', 'DESC')
                   ->setParameter('account', $account)
                   ->setParameter('date_start', $dateStart)
                   ->setParameter('date_end', $dateEnd);

        /*if (false === is_null($limit))
            $qb->setMaxResults($limit);*/

        return $qb->getQuery()->getResult();
    }

}